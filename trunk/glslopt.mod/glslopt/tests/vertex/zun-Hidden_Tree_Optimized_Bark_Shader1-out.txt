uniform mat4 _Object2World;
uniform vec4 _Scale;
uniform float _SquashAmount;
uniform vec4 _SquashPlaneNormal;
uniform float _TimeX;
uniform vec4 _Wind;
uniform vec4 unity_LightShadowBias;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2.w = gl_Vertex.w;
  tmpvar_2.xyz = (gl_Vertex.xyz * _Scale.xyz);
  vec4 pos_3;
  pos_3.w = tmpvar_2.w;
  vec3 bend_4;
  float tmpvar_5;
  tmpvar_5 = (dot (_Object2World[3].xyz, vec3(1.0, 1.0, 1.0)) + gl_Color.x);
  vec2 tmpvar_6;
  tmpvar_6.x = dot (tmpvar_2.xyz, vec3((gl_Color.y + tmpvar_5)));
  tmpvar_6.y = tmpvar_5;
  vec4 tmpvar_7;
  tmpvar_7 = abs(((
    fract((((
      fract(((_TimeX + tmpvar_6).xxyy * vec4(1.975, 0.793, 0.375, 0.193)))
     * 2.0) - 1.0) + 0.5))
   * 2.0) - 1.0));
  vec4 tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * (3.0 - (2.0 * tmpvar_7)));
  vec2 tmpvar_9;
  tmpvar_9 = (tmpvar_8.xz + tmpvar_8.yw);
  bend_4.xz = ((gl_Color.y * 0.1) * gl_Normal).xz;
  bend_4.y = (gl_MultiTexCoord1.y * 0.3);
  pos_3.xyz = (tmpvar_2.xyz + ((
    (tmpvar_9.xyx * bend_4)
   + 
    ((_Wind.xyz * tmpvar_9.y) * gl_MultiTexCoord1.y)
  ) * _Wind.w));
  pos_3.xyz = (pos_3.xyz + (gl_MultiTexCoord1.x * _Wind.xyz));
  vec3 tmpvar_10;
  tmpvar_10.xz = vec2(0.0, 0.0);
  tmpvar_10.y = _SquashPlaneNormal.w;
  vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = mix ((pos_3.xyz + (
    dot (_SquashPlaneNormal.xyz, (tmpvar_10 - pos_3.xyz))
   * _SquashPlaneNormal.xyz)), pos_3.xyz, vec3(_SquashAmount));
  tmpvar_2 = tmpvar_11;
  vec4 tmpvar_12;
  tmpvar_12 = (gl_ModelViewProjectionMatrix * tmpvar_11);
  tmpvar_1.xyw = tmpvar_12.xyw;
  tmpvar_1.z = (tmpvar_12.z + unity_LightShadowBias.x);
  if ((tmpvar_1.z < -(tmpvar_12.w))) {
    tmpvar_1.z = -(tmpvar_12.w);
  };
  gl_Position = tmpvar_1;
}


// inputs: 4, stats: 43 alu 0 tex 1 flow
