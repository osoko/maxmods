#version 140
uniform vec2 p;
in vec4 position;
in vec4 icol;
out vec4 col;
flat out ivec4 colint;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.zw = vec2(0.0, 0.0);
  tmpvar_1.xy = p.xy;
  vec4 tmpvar_2;
  tmpvar_2 = (tmpvar_1 + position);
  gl_Position = tmpvar_2;
  int tmpvar_3;
  tmpvar_3 = gl_VertexID;
  colint.x = tmpvar_3;
  int tmpvar_4;
  tmpvar_4 = (gl_InstanceID ^ gl_InstanceID);
  colint.y = ivec2(tmpvar_4).y;
  int tmpvar_5;
  tmpvar_5 = (gl_InstanceID << 2);
  colint.z = ivec3(tmpvar_5).z;
  int tmpvar_6;
  tmpvar_6 = (colint.x + colint.y);
  colint.w = ivec4(tmpvar_6).w;
  float tmpvar_7;
  tmpvar_7 = trunc (position.x);
  float tmpvar_8;
  tmpvar_8 = tmpvar_7;
  col.x = tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = round (position.y);
  float tmpvar_10;
  tmpvar_10 = tmpvar_9;
  col.y = vec2(tmpvar_10).y;
  float tmpvar_11;
  tmpvar_11 = roundEven (position.y);
  float tmpvar_12;
  tmpvar_12 = tmpvar_11;
  col.z = vec3(tmpvar_12).z;
  float tmpvar_13;
  tmpvar_13 = cosh (position.w);
  float tmpvar_14;
  tmpvar_14 = tmpvar_13;
  col.w = vec4(tmpvar_14).w;
}

